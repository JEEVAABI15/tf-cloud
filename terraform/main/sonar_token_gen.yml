
---
- name: SonarQube Project and Token Automation
  hosts: your_ec2_instance
  become: true
  tasks:

    - name: Check if SonarQube container is running
      shell: "docker ps -q -f name=sonarqube"
      register: sonarqube_container
      ignore_errors: yes

    - name: Run SonarQube
      command: >
        docker start sonarqube
      when: sonarqube_container.stdout == ""
      ignore_errors: yes

    - name: Check if admin user exists
      command: >
        curl -u admin:admin -X GET "http://localhost:9000/api/users/search?login=admin"
      register: admin_check
      ignore_errors: yes

    - name: Change SonarQube admin password if it's a new instance
      command: >
        curl -u admin:admin -X POST
        "http://localhost:9000/api/users/change_password?login=admin&previousPassword=admin&password=admin123"
      when: admin_check.rc == 0
      ignore_errors: yes

    - name: Log in to SonarQube with admin:admin123
      command: >
        curl -u admin:admin123 -X GET "http://localhost:9000/api/users/search?login=admin"
      when: admin_check.rc == 0
      register: login_response
      ignore_errors: yes

    - name: Create SonarQube project with timestamp
      command: >
        curl -u admin:admin123 -X POST
        "http://localhost:9000/api/projects/create?name=MyProject{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}&project=my_project_key"
      when: login_response is defined
      ignore_errors: yes

    - name: Generate a new SonarQube token
      command: >
        curl -u admin:admin123 -X POST "http://localhost:9000/api/user_tokens/generate?login=admin&name=sonar_token"
      register: token_response

    - name: Debug the token response
      debug:
        var: token_response.stdout | from_json

    - name: Save the SonarQube token to a file
      copy:
        content: >
          {% if 'token' in (token_response.stdout | from_json) %}
            {{ (token_response.stdout | from_json).token }}
          {% else %}
            "No token found"
          {% endif %}
        dest: "/tmp/sonarqube_token.txt"
